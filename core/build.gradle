/*
 *     Copyright 2016 - 2017 Florian Spie√ü
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.1.1'
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.9.9'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.3'
    id 'org.jetbrains.kotlin.jvm' version '1.1.1'
    id 'idea'
}

apply plugin: 'org.jetbrains.dokka'

ext.moduleName = 'gunfire'

dependencies {
    compileOnly 'org.jetbrains.kotlin:kotlin-stdlib-jre8:1.1.1'
    testCompile 'org.jetbrains.kotlin:kotlin-stdlib-jre8:1.1.1'

    compileOnly 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.14'
    testCompile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.14'

    testCompile 'junit:junit:4.12'
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    logging.level = LogLevel.QUIET
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from dokkaJavadoc.outputDirectory
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}
